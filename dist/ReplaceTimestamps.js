function A(t){window.enmity.plugins.registerPlugin(t)}function P(t){return window.enmity.patcher.create(t)}const c=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets;const M=window.enmity.modules.common.Messages;window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts;const S=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const k=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const B=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function f(t,o,a){window.enmity.settings.set(t,o,a)}function E(t,o,a){return window.enmity.settings.get(t,o,a)}const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList,e.Image,e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl;const I=e.ScrollView;e.SectionList,e.StatusBar,e.StyleSheet,e.Switch;const d=e.Text;e.TextInput,e.TouchableHighlight,e.TouchableOpacity,e.TouchableWithoutFeedback,e.Touchable;const v=e.View;e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox,e.FormDivider,e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio;const u=e.FormRow,b=e.FormSection;e.FormSelect,e.FormSubLabel;const N=e.FormSwitch;e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;var r="ReplaceTimestamps",w="1.1.3",V="Replaces plaintext 24 hour timestamps into Discord's timestamps",C=[{name:"HypedDomi",id:"354191516979429376"}],O="#E54B4B",F="https://raw.githubusercontent.com/HypedDomi/Enmity-Stuff/main/dist/ReplaceTimestamps.js",x="https://github.com/HypedDomi/Enmity-Stuff/tree/main/ReplaceTimestamps",D=[["Relative Mode works with whitespace now"]],p={name:r,version:w,description:V,authors:C,color:O,rawUrl:F,sourceUrl:x,changelog:D};function Y(...t){return window.enmity.modules.getByProps(...t)}window.enmity.modules.common;const{native:g}=window.enmity;function H(){g.reload()}g.version,g.build,g.device,g.version;async function _(){let t=(await(await fetch(`${F}?${Math.random()}`)).text()).match(/[0-9].[0-9].[0-9]/g);if(!(t!=null&&t.length))return!1;t=t[0].replace('"',""),t=t.split(".").map(a=>parseInt(a));const o=w.split(".").map(a=>parseInt(a));return t[0]>o[0]||t[0]==o[0]&&t[1]>o[1]?!0:t[0]==o[0]&&t[1]==o[1]&&t[2]>o[2]}const z=t=>{window.enmity.plugins.installPlugin(t),S.show({title:"Plugin Updater",body:"Updated to the latest version. Would you like to reload Discord now?",confirmText:"Reload",cancelText:"Later",onConfirm:()=>H()})};function L(){S.show({title:"Plugin Updater",body:`**${r}** has an update. Do you want to update now?`,confirmText:"Update",cancelText:"No",onConfirm:()=>{f(r,"_didUpdate",!0),f(r,"_changelog",!1),z(`${F}?${Math.random()}`)}})}function j(){S.show({title:`${r} - v${w}`,body:`- ${D.join(`
- `)}`,confirmText:"OK",onConfirm:()=>f(r,"_changelog",!0)})}const U=Y("transitionToGuild");var K=({settings:t})=>{const o=B.createThemedStyleSheet({item:{color:c.ThemeColorMap.TEXT_MUTED},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},main_text:{opacity:.975,letterSpacing:.25},header:{color:c.ThemeColorMap.HEADER_PRIMARY,fontFamily:c.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:c.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),[a,l]=n.useState(),[h,T]=n.useState();return n.createElement(n.Fragment,null,n.createElement(I,{onTouchStart:i=>{l(i.nativeEvent.pageX),T(i.nativeEvent.pageY)},onTouchEnd:i=>{a-i.nativeEvent.pageX<-100&&h-i.nativeEvent.pageY<40&&h-i.nativeEvent.pageY>-40&&k.pop()}},n.createElement(v,null,n.createElement(v,{style:o.text_container},n.createElement(d,{style:[o.main_text,o.header]},r),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(d,{style:[o.main_text,o.sub_header]},"Author:"),n.createElement(d,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:c.Fonts.DISPLAY_BOLD}]},` ${C.map(i=>i.name).join(", ")}`)),n.createElement(v,{style:{flexDirection:"row"}},n.createElement(d,{style:[o.main_text,o.sub_header]},"Version:"),n.createElement(d,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:c.Fonts.DISPLAY_BOLD}]},` ${w}`)))),n.createElement(b,{title:"Updates"},n.createElement(u,{label:"Check for Updates on startup",subLabel:"Checks automatically for updates when starting the Plugin",trailing:n.createElement(N,{value:t.getBoolean("autoUpdateCheck",!0),onValueChange:()=>t.toggle("autoUpdateCheck",!0)})}),n.createElement(u,{label:"Check for Updates",trailing:u.Arrow,onPress:()=>{_().then(i=>{i?L():S.show({title:"Plugin Updater",body:`**${r}** is already on the latest version (**${w}**)`,confirmText:"OK"})})}})),n.createElement(b,{title:"Source"},n.createElement(u,{label:"Source",subLabel:`See the Source Code for ${r}`,trailing:u.Arrow,onPress:()=>U==null?void 0:U.openURL(x)}))))};const R=P("ReplaceTimestamps"),W={...p,onStart(){E(p.name,"_didUpdate",!1)||(E(p.name,"autoUpdateCheck",!0)&&_().then(o=>{o&&L()}),E(p.name,"_changelog",!1)||j()),f(p.name,"_didUpdate",!1);const t=o=>{const a=new Date().toISOString().replace(/T/," ").replace(/\..+/,"").replace(/\d?\d:\d\d/,o),l=Math.round(new Date(a).getTime()/1e3);return isNaN(l)?o:`<t:${l}:t>`};R.before(M,"sendMessage",(o,[,a])=>{const l=/(?<!\d)\d{1,2}:\d{2}(?!\d)\s?(am|pm)?/gi,h=/((?<!\d)\d{1,2}:\d{2}(?!\d))\s?(am|pm)?/i;a.content.search(l)!==-1&&(a.content=a.content.replace(l,T=>{let[,i,y]=T.match(h),[s,m]=i.split(":").map($=>parseInt($));return y&&y.toLowerCase()==="pm"&&s<12&&s!==0?(s+=12,m=m.toString().padStart(2,"0"),i=`${s}:${m}`):y&&y.toLowerCase()==="am"&&s===12||s===24?i=`00:${m}`:m>=60&&(s+=Math.floor(m/60),m=m%60,i=`${s}:${m}`),t(i)}))})},onStop(){R.unpatchAll()},getSettingsPanel({settings:t}){return n.createElement(K,{settings:t})}};A(W);
