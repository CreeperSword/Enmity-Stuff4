function B(o){window.enmity.plugins.registerPlugin(o)}const d=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets;const N=window.enmity.modules.common.Messages;window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts;const f=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const H=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const I=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function O(o){return window.enmity.patcher.create(o)}var b="ReplaceTimestamps",F="1.2.9",Y="Replaces plaintext 24 hour timestamps into Discord's timestamps",L=[{name:"HypedDomi",id:"354191516979429376"}],j="#E54B4B",z="https://raw.githubusercontent.com/HypedDomi/Enmity-Stuff/main/dist/ReplaceTimestamps.js",P="https://github.com/HypedDomi/Enmity-Stuff/tree/main/ReplaceTimestamps",R=["Fixed timestamps not being replaced in some cases"],A="e2023af7d5ba86cc18c10136c44a7dfa0a8fdd7d",E={name:b,version:F,description:Y,authors:L,color:j,rawUrl:z,sourceUrl:P,changelog:R,hash:A};const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList,e.Image,e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl;const W=e.ScrollView;e.SectionList,e.StatusBar,e.StyleSheet,e.Switch;const h=e.Text;e.TextInput,e.TouchableHighlight,e.TouchableOpacity,e.TouchableWithoutFeedback,e.Touchable;const y=e.View;e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox,e.FormDivider,e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio;const u=e.FormRow,M=e.FormSection;e.FormSelect,e.FormSubLabel;const G=e.FormSwitch;e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;function K(...o){return window.enmity.modules.getByProps(...o)}window.enmity.modules.common;const{native:v}=window.enmity;function X(){v.reload()}v.version,v.build,v.device,v.version;function $(o,t,a){window.enmity.settings.set(o,t,a)}function C(o,t,a){return window.enmity.settings.get(o,t,a)}const T={name:"",version:"",rawUrl:"",changelog:[""],hash:"",remoteHash:null,remoteVersion:null,remoteChangelog:[""],create({name:o,version:t,rawUrl:a,changelog:i,hash:r}){if(!o||!t||!a||!i||!r)return console.error(`[${o||__filename}] Missing parameters in constructor`);this.name=o,this.version=t,this.rawUrl=a,this.changelog=i,this.hash=r,C(o,"_didUpdate",!1)||(C(o,"_changelog",t)!==t&&this.showChangelog(),C(o,"autoUpdateCheck",!0)&&this.hash!=="DEBUG"&&this.checkForUpdates()),$(o,"_didUpdate",!1)},showChangelog(){!this.changelog||f.show({title:`${this.name} - v${this.version}`,body:`- ${this.changelog.join(`
- `)}`,confirmText:"OK",onConfirm:()=>$(this.name,"_changelog",this.version)})},async checkForUpdates(o=!1){var t,a,i,r,m,s;const l=await(await fetch(`${this.rawUrl}?${Math.random()}`)).text(),g=(t=l.match(/hash:(\w+)/))==null?void 0:t[1],c=(a=l.match(new RegExp(`${g}="([^,"]+)"`)))==null?void 0:a[1];c?this.remoteHash=c!=null?c:"0AB1C2":console.warn(`[${this.name}] Failed to fetch remote hash`);const p=(i=l.match(/version:(\w+)/))==null?void 0:i[1],x=(r=l.match(new RegExp(`${p}="([^,"]+)"`)))==null?void 0:r[1];x?this.remoteVersion=x:console.warn(`[${this.name}] Failed to fetch remote version`);const U=(m=l.match(/changelog:(\w+)/))==null?void 0:m[1],_=(s=l.match(new RegExp(`${U}=\\[(.*?)\\]`)))==null?void 0:s[0];if(_?this.remoteChangelog=JSON.parse(_.replace(`${U}=`,"")):console.warn(`[${this.name}] Failed to fetch remote changelog`),this.remoteHash&&this.remoteVersion){const S=this.version.split(".").map(Number),D=this.remoteVersion.split(".").map(Number);for(let w=0;w<S.length;w++){if(D[w]>S[w])return this.showUpdateDialog({version:this.remoteVersion,changelog:this.remoteChangelog});if(D[w]<S[w])return console.log(`[${this.name}] Remote version is older than local version`)}if(this.remoteHash!==this.hash)return this.showUpdateDialog({hash:this.remoteHash})}!o||f.show({title:"Plugin Updater",body:`No update available for ${this.name}`,confirmText:"OK"})},showUpdateDialog({version:o,hash:t,changelog:a}){if(!o&&!t)return console.error(`[${this.name}] Missing parameters in showUpdateDialog()`);let i="";o?i=`New Version for ${this.name} is available!`:i=`New Build for ${this.name} is available!`,i+=`
Would you like to update now?`,a&&(i+=`

Changelog:
- ${a.join(`
- `)}`),f.show({title:"Plugin Updater",body:i,confirmText:"Update",cancelText:"No",onConfirm:()=>{$(this.name,"_didUpdate",!0),this.installPlugin(!!t)}})},installPlugin(o=!1){var t;const a=o?"updated Build":"updated Version",i=o?`\`${(t=this.remoteHash)==null?void 0:t.slice(0,7)}\``:this.remoteVersion;window.enmity.plugins.installPlugin(`${this.rawUrl}?${Math.random()}`,({data:r})=>{r==="installed_plugin"||r==="overridden_plugin"?f.show({title:`Installed ${this.name} v${this.remoteVersion}`,body:`Successfully ${a} to **${i}**.
Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Later",onConfirm:X}):console.error(`[${this.name}] Failed to install v${i}`)})}},V=K("transitionToGuild","openURL");T.create(E);var J=({settings:o})=>{const t=I.createThemedStyleSheet({item:{color:d.ThemeColorMap.TEXT_MUTED},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},main_text:{opacity:.975,letterSpacing:.25},header:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:d.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),[a,i]=n.useState(),[r,m]=n.useState();return n.createElement(n.Fragment,null,n.createElement(W,{onTouchStart:s=>{i(s.nativeEvent.pageX),m(s.nativeEvent.pageY)},onTouchEnd:s=>{a-s.nativeEvent.pageX<-100&&r-s.nativeEvent.pageY<40&&r-s.nativeEvent.pageY>-40&&H.pop()}},n.createElement(y,null,n.createElement(y,{style:t.text_container},n.createElement(h,{style:[t.main_text,t.header]},b),n.createElement(y,{style:{flexDirection:"row"}},n.createElement(h,{style:[t.main_text,t.sub_header]},"Author:"),n.createElement(h,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},` ${L.map(s=>s.name).join(", ")}`)),n.createElement(y,{style:{flexDirection:"row"}},n.createElement(h,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(h,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},` ${F}`)),n.createElement(y,{style:{flexDirection:"row"}},n.createElement(h,{style:[t.main_text,t.sub_header]},"Hash:"),n.createElement(h,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},` ${A.slice(0,7)}`)))),n.createElement(M,{title:"Updates"},n.createElement(u,{label:"Check for Updates on startup",subLabel:"Checks automatically for updates when starting the Plugin",trailing:n.createElement(G,{value:o.getBoolean("autoUpdateCheck",!0),onValueChange:()=>o.toggle("autoUpdateCheck",!0)})}),n.createElement(u,{label:"Check for Updates",trailing:u.Arrow,onPress:()=>T.checkForUpdates(!0)}),n.createElement(u,{label:"Show Changelog",subLabel:`Shows the changelog for v${F}`,trailing:u.Arrow,onPress:()=>T.showChangelog(),disabled:!R.length})),n.createElement(M,{title:"Source"},n.createElement(u,{label:"Source",subLabel:`See the Source Code for ${b}`,trailing:u.Arrow,onPress:()=>V==null?void 0:V.openURL(P)}))))};const k=O(E.name),q={...E,onStart(){const o=t=>{const a=new Date().toISOString().replace(/T/," ").replace(/\..+/,"").replace(/\d?\d:\d\d/,t),i=Math.round(new Date(a).getTime()/1e3);return isNaN(i)?t:` <t:${i}:t> `};k.before(N,"sendMessage",(t,[,a])=>{const i=/\b(0?[0-9]|1[0-9]|2[0-4]):([0-5][0-9])( ?[ap]m)?\b/gi;a.content.search(i)!==-1&&(a.content=a.content.replace(i,r=>{let m,s,l;[,m,s,l]=i.exec(r).map((c,p)=>{if(c===void 0)return c;if(p===1||p===2)return parseInt(c);if(p===3)return c.toUpperCase()});let g=`${m}:${s}`;return l==="PM"&&m<12&&m!==0?(m+=12,s=s.toString().padStart(2,"0"),g=`${m}:${s}`):(l==="AM"&&m===12||m===24)&&(g=`00:${s}`),o(g)}))})},onStop(){k.unpatchAll()},getSettingsPanel({settings:o}){return n.createElement(J,{settings:o})}};B(q);
