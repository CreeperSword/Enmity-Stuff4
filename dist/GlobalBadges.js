function x(e,o,a){window.enmity.settings.set(e,o,a)}function p(e,o,a){return window.enmity.settings.get(e,o,a)}const{components:t}=window.enmity;t.Alert,t.Button,t.FlatList;const N=t.Image;t.ImageBackground,t.KeyboardAvoidingView,t.Modal,t.Pressable,t.RefreshControl;const V=t.ScrollView;t.SectionList,t.StatusBar,t.StyleSheet,t.Switch;const y=t.Text;t.TextInput,t.TouchableHighlight;const O=t.TouchableOpacity;t.TouchableWithoutFeedback,t.Touchable;const f=t.View;t.VirtualizedList,t.Form,t.FormArrow,t.FormCTA,t.FormCTAButton,t.FormCardSection,t.FormCheckbox,t.FormDivider,t.FormHint,t.FormIcon,t.FormInput,t.FormLabel,t.FormRadio;const c=t.FormRow,T=t.FormSection;t.FormSelect,t.FormSubLabel;const F=t.FormSwitch;t.FormTernaryCheckBox,t.FormText,t.FormTextColors,t.FormTextSizes;function H(e){window.enmity.plugins.registerPlugin(e)}function Y(...e){return window.enmity.modules.getByProps(...e)}function j(...e){return window.enmity.modules.getByName(...e)}window.enmity.modules.common;const g=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const z=window.enmity.modules.common.Toasts,v=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const G=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const K=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function W(e){return window.enmity.patcher.create(e)}var l="GlobalBadges",d="1.1.5",X="Adds global badges from other client mods",D=[{name:"HypedDomi",id:"354191516979429376"}],q="#E54B4B",B="https://raw.githubusercontent.com/HypedDomi/Enmity-Stuff/main/dist/GlobalBadges.js",L="https://github.com/HypedDomi/Enmity-Stuff/tree/main/GlobalBadges",E=["Added support for Custom Badges"],s={name:l,version:d,description:X,authors:D,color:q,rawUrl:B,sourceUrl:L,changelog:E};const{native:b}=window.enmity;function J(){b.reload()}b.version,b.build,b.device,b.version;async function P(){let e=(await(await fetch(`${B}?${Math.random()}`)).text()).match(/\d\.\d\.\d+/g);if(!(e!=null&&e.length))return!1;e=e[0].replace('"',""),e=e.split(".").map(a=>parseInt(a));const o=d.split(".").map(a=>parseInt(a));return e[0]>o[0]||e[0]==o[0]&&e[1]>o[1]?!0:e[0]==o[0]&&e[1]==o[1]&&e[2]>o[2]}const Q=e=>{let o=[];fetch(e).then(a=>a.text()).then(a=>o=a.match(/\d\.\d\.\d+/g)),window.enmity.plugins.installPlugin(e,({data:a})=>{a=="installed_plugin"||a=="overridden_plugin"?v.show({title:`Updated ${l}`,body:`Successfully updated to version **${o!=null&&o.length?o[0]:d}**. Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Later",onConfirm:()=>J()}):console.log(`[${l}] Plugin failed to update to version ${d}`)})};function U(){v.show({title:"Plugin Updater",body:`**${l}** has an update. Do you want to update now?`,confirmText:"Update",cancelText:"No",onConfirm:()=>{x(l,"_didUpdate",!0),Q(`${B}?${Math.random()}`)}})}function A(){!E.length||v.show({title:`${l} - v${d}`,body:`- ${E.join(`
- `)}`,confirmText:"OK",onConfirm:()=>x(l,"_changelog",d)})}const k=Y("transitionToGuild");var Z=({settings:e})=>{const o=K.createThemedStyleSheet({item:{color:g.ThemeColorMap.TEXT_MUTED},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},main_text:{opacity:.975,letterSpacing:.25},header:{color:g.ThemeColorMap.HEADER_PRIMARY,fontFamily:g.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:g.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),[a,u]=n.useState(),[m,h]=n.useState();return n.createElement(n.Fragment,null,n.createElement(V,{onTouchStart:r=>{u(r.nativeEvent.pageX),h(r.nativeEvent.pageY)},onTouchEnd:r=>{a-r.nativeEvent.pageX<-100&&m-r.nativeEvent.pageY<40&&m-r.nativeEvent.pageY>-40&&G.pop()}},n.createElement(f,null,n.createElement(f,{style:o.text_container},n.createElement(y,{style:[o.main_text,o.header]},l),n.createElement(f,{style:{flexDirection:"row"}},n.createElement(y,{style:[o.main_text,o.sub_header]},"Author:"),n.createElement(y,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:g.Fonts.DISPLAY_BOLD}]},` ${D.map(r=>r.name).join(", ")}`)),n.createElement(f,{style:{flexDirection:"row"}},n.createElement(y,{style:[o.main_text,o.sub_header]},"Version:"),n.createElement(y,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:g.Fonts.DISPLAY_BOLD}]},` ${d}`)))),n.createElement(T,{title:"Badges"},n.createElement(c,{label:"Prefix",subLabel:"Shows the Mod as Prefix",trailing:n.createElement(F,{value:e.getBoolean("showPrefix",!0),onValueChange:()=>e.toggle("showPrefix",!0)})}),n.createElement(c,{label:"Custom Badges",subLabel:"Show Custom Badges",trailing:n.createElement(F,{value:e.getBoolean("showCustom",!0),onValueChange:()=>e.toggle("showCustom",!0)})})),n.createElement(T,{title:"Updates"},n.createElement(c,{label:"Check for Updates on startup",subLabel:"Checks automatically for updates when starting the Plugin",trailing:n.createElement(F,{value:e.getBoolean("autoUpdateCheck",!0),onValueChange:()=>e.toggle("autoUpdateCheck",!0)})}),n.createElement(c,{label:"Check for Updates",trailing:c.Arrow,onPress:()=>{P().then(r=>{r?U():v.show({title:"Plugin Updater",body:`**${l}** is already on the latest version (**${d}**)`,confirmText:"OK"})})}}),n.createElement(c,{label:"Show Changelog",subLabel:`Shows the changelog for v${d}`,trailing:c.Arrow,onPress:()=>A(),disabled:!E.length})),n.createElement(T,{title:"Source"},n.createElement(c,{label:"Source",subLabel:`See the Source Code for ${l}`,trailing:c.Arrow,onPress:()=>k==null?void 0:k.openURL(L)}))))};const M="https://clientmodbadges-api.herokuapp.com/",C=new Map,ee=1e3*60*15,te=(e,o)=>{var a,u;!C.has(e)||((a=C.get(e))==null?void 0:a.expires)<Date.now()?fetch(`${M}users/${e}`).then(m=>m.json()).then(m=>{C.set(e,{badges:m,expires:Date.now()+ee}),o(m)}):o((u=C.get(e))==null?void 0:u.badges)},oe=({name:e,img:o})=>{const a={wrapper:{alignItems:"center",flexDirection:"row",justifyContent:"flex-end"},image:{width:24,height:24,resizeMode:"contain",marginHorizontal:2}};return n.createElement(f,{style:a.wrapper},n.createElement(O,{onPress:()=>z.open({content:e,source:{uri:o}})},n.createElement(N,{style:a.image,source:{uri:o}})))},R=W(s.name),ne={...s,onStart(){p(s.name,"_didUpdate",!1)||(p(s.name,"autoUpdateCheck",!0)&&P().then(o=>{o&&U()}),p(s.name,"_changelog",s.version)!==s.version&&A()),x(s.name,"_didUpdate",!1);const e=j("ProfileBadges",{all:!0,default:!1});for(const o of e)R.after(o,"default",(a,[{user:{id:u}}],m)=>{const[h,r]=n.useState({});n.useEffect(()=>te(u,r),[]);const S=[];if(!h||(Object.keys(h).forEach(w=>{w.toLowerCase()!=="enmity"&&h[w].forEach(i=>{if(typeof i=="string"){const $={hunter:"Bug Hunter",early:"Early User"};$[i]&&(i=$[i]),i={name:i,badge:`${M}badges/${w}/${i.replace(w,"").trim().split(" ")[0]}`}}else typeof i=="object"&&(i.custom=!0);if(!p(s.name,"showCustom",!0)&&i.custom)return;const _=i.name.replace(w,"").trim(),I=p(s.name,"showPrefix",!0)?w:"";i.custom||(i.name=`${I} ${_.charAt(0).toUpperCase()+_.slice(1)}`),S.push(n.createElement(oe,{name:i.name,img:i.badge}))})}),!S.length))return m;m.props.badges?m.props.badges.push(...S):m.props.children.push(...S)})},onStop(){R.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(Z,{settings:e})}};H(ne);
