const d=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const O=window.enmity.modules.common.Toasts,x=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const Y=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const j=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;function G(e){return window.enmity.patcher.create(e)}function F(e,t,a){window.enmity.settings.set(e,t,a)}function S(e,t,a){return window.enmity.settings.get(e,t,a)}function z(...e){return window.enmity.modules.getByProps(...e)}function X(...e){return window.enmity.modules.getByName(...e)}const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const W=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const K=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const g=o.Text;o.TextInput,o.TouchableHighlight;const J=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const w=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox,o.FormDivider,o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const h=o.FormRow,_=o.FormSection;o.FormSelect,o.FormSubLabel;const T=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;function q(e){window.enmity.plugins.registerPlugin(e)}var B="GlobalBadges",P="1.2.5",Q="Adds global badges from other client mods",R=[{name:"HypedDomi",id:"354191516979429376"}],Z="#E54B4B",ee="https://raw.githubusercontent.com/HypedDomi/Enmity-Stuff/main/dist/GlobalBadges.js",A="https://github.com/HypedDomi/Enmity-Stuff/tree/main/GlobalBadges",k=["Improved Updater","Fixed Replugged Bug Hunter Badge"],H="38e0375bf9a2a93958bd86afa53e4160233d32a9",E={name:B,version:P,description:Q,authors:R,color:Z,rawUrl:ee,sourceUrl:A,changelog:k,hash:H};const{native:b}=window.enmity;function te(){b.reload()}b.version,b.build,b.device,b.version;const U={name:"",version:"",rawUrl:"",changelog:[""],hash:"",remoteHash:null,remoteVersion:null,remoteChangelog:[""],create({name:e,version:t,rawUrl:a,changelog:i,hash:r}){if(!e||!t||!a||!i||!r)return console.error(`[${e||__filename}] Missing parameters in constructor`);this.name=e,this.version=t,this.rawUrl=a,this.changelog=i,this.hash=r,S(e,"_didUpdate",!1)||(S(e,"_changelog",t)!==t&&this.showChangelog(),S(e,"autoUpdateCheck",!0)&&this.checkForUpdates()),F(e,"_didUpdate",!1)},showChangelog(){!this.changelog||x.show({title:`${this.name} - v${this.version}`,body:`- ${this.changelog.join(`
- `)}`,confirmText:"OK",onConfirm:()=>F(this.name,"_changelog",this.version)})},async checkForUpdates(e=!1){var t,a,i,r,u,m;const s=await(await fetch(`${this.rawUrl}?${Math.random()}`)).text(),l=(t=s.match(/hash:(\w+)/))==null?void 0:t[1],f=(a=s.match(new RegExp(`${l}="([^,"]+)"`)))==null?void 0:a[1];f?this.remoteHash=f:console.warn(`[${this.name}] Failed to fetch remote hash`);const $=(i=s.match(/version:(\w+)/))==null?void 0:i[1],y=(r=s.match(new RegExp(`${$}="([^,"]+)"`)))==null?void 0:r[1];y?this.remoteVersion=y:console.warn(`[${this.name}] Failed to fetch remote version`);const L=(u=s.match(/changelog:(\w+)/))==null?void 0:u[1],V=(m=s.match(new RegExp(`${L}=\\[(.*?)\\]`)))==null?void 0:m[0];if(V?this.remoteChangelog=JSON.parse(V.replace(`${L}=`,"")):console.warn(`[${this.name}] Failed to fetch remote changelog`),this.remoteHash&&this.remoteVersion){const v=this.version.split(".").map(Number),C=this.remoteVersion.split(".").map(Number);for(let c=0;c<v.length;c++){if(console.log(`[${this.name}] Checking version: ${C[c]} > ${v[c]} ${C[c]>v[c]}`),C[c]>v[c])return this.showUpdateDialog({version:this.remoteVersion,changelog:this.remoteChangelog});if(C[c]<v[c])return console.log(`[${this.name}] Remote version is older than local version`)}if(this.remoteHash!==this.hash)return this.showUpdateDialog({hash:this.remoteHash})}!e||x.show({title:"Plugin Updater",body:`No update available for ${this.name}`,confirmText:"OK"})},showUpdateDialog({version:e,hash:t,changelog:a}){if(console.log(`[${this.name}] Showing update dialog`),!e&&!t)return console.error(`[${this.name}] Missing parameters in showUpdateDialog()`);let i="";e?i=`New Version for ${this.name} is available!`:i=`New Build for ${this.name} is available!`,i+=`
Would you like to update now?`,a&&(i+=`

Changelog:
- ${a.join(`
- `)}`),x.show({title:"Plugin Updater",body:i,confirmText:"Update",cancelText:"No",onConfirm:()=>{F(this.name,"_didUpdate",!0),this.installPlugin(!!t)}})},installPlugin(e=!1){var t;const a=e?"updated Build":"updated Version",i=e?`\`${(t=this.remoteHash)==null?void 0:t.slice(0,7)}\``:this.remoteVersion;window.enmity.plugins.installPlugin(`${this.rawUrl}?${Math.random()}`,({data:r})=>{r==="installed_plugin"||r==="overridden_plugin"?x.show({title:`Installed ${this.name} v${this.remoteVersion}`,body:`Successfully ${a} to **${i}**.
Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Later",onConfirm:te}):console.error(`[${this.name}] Failed to install v${i}`)})}},N=z("transitionToGuild","openURL");U.create(E);var oe=({settings:e})=>{const t=j.createThemedStyleSheet({item:{color:d.ThemeColorMap.TEXT_MUTED},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},main_text:{opacity:.975,letterSpacing:.25},header:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:d.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),[a,i]=n.useState(),[r,u]=n.useState();return n.createElement(n.Fragment,null,n.createElement(K,{onTouchStart:m=>{i(m.nativeEvent.pageX),u(m.nativeEvent.pageY)},onTouchEnd:m=>{a-m.nativeEvent.pageX<-100&&r-m.nativeEvent.pageY<40&&r-m.nativeEvent.pageY>-40&&Y.pop()}},n.createElement(w,null,n.createElement(w,{style:t.text_container},n.createElement(g,{style:[t.main_text,t.header]},B),n.createElement(w,{style:{flexDirection:"row"}},n.createElement(g,{style:[t.main_text,t.sub_header]},"Author:"),n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},` ${R.map(m=>m.name).join(", ")}`)),n.createElement(w,{style:{flexDirection:"row"}},n.createElement(g,{style:[t.main_text,t.sub_header]},"Version:"),n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},` ${P}`)),n.createElement(w,{style:{flexDirection:"row"}},n.createElement(g,{style:[t.main_text,t.sub_header]},"Hash:"),n.createElement(g,{style:[t.main_text,t.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},` ${H.slice(0,7)}`)))),n.createElement(_,{title:"Badges"},n.createElement(h,{label:"Prefix",subLabel:"Shows the Mod as Prefix",trailing:n.createElement(T,{value:e.getBoolean("showPrefix",!0),onValueChange:()=>e.toggle("showPrefix",!0)})}),n.createElement(h,{label:"Custom Badges",subLabel:"Show Custom Badges",trailing:n.createElement(T,{value:e.getBoolean("showCustom",!0),onValueChange:()=>e.toggle("showCustom",!0)})})),n.createElement(_,{title:"Updates"},n.createElement(h,{label:"Check for Updates on startup",subLabel:"Checks automatically for updates when starting the Plugin",trailing:n.createElement(T,{value:e.getBoolean("autoUpdateCheck",!0),onValueChange:()=>e.toggle("autoUpdateCheck",!0)})}),n.createElement(h,{label:"Check for Updates",trailing:h.Arrow,onPress:()=>U.checkForUpdates(!0)}),n.createElement(h,{label:"Show Changelog",subLabel:`Shows the changelog for v${P}`,trailing:h.Arrow,onPress:()=>U.showChangelog(),disabled:!k.length})),n.createElement(_,{title:"Source"},n.createElement(h,{label:"Source",subLabel:`See the Source Code for ${B}`,trailing:h.Arrow,onPress:()=>N==null?void 0:N.openURL(A)}))))};const I="https://clientmodbadges-api.herokuapp.com/",D=new Map,ne=1e3*60*15,ae=e=>{const t=D.get(e);if(!D.has(e)||t&&t.expires<Date.now())fetch(`${I}users/${e}`).then(a=>a.json()).then(a=>(D.set(e,{badges:a,expires:Date.now()+ne}),a));else if(t)return t.badges},ie=({name:e,img:t})=>{const a={wrapper:{alignItems:"center",flexDirection:"row",justifyContent:"flex-end"},image:{width:24,height:24,resizeMode:"contain",marginHorizontal:2}};return n.createElement(w,{style:a.wrapper},n.createElement(J,{onPress:()=>O.open({content:e,source:{uri:t}})},n.createElement(W,{style:a.image,source:{uri:t}})))},M=G(E.name),re={...E,onStart(){const e=X("ProfileBadges",{all:!0,default:!1});for(const t of e)M.after(t,"default",(a,[{user:{id:i}}],r)=>{const[u,m]=n.useState({});if(n.useEffect(()=>{var s;return m((s=ae(i))!=null?s:{})},[]),!u)return null;const p=[];if(!u||(Object.keys(u).forEach(s=>{s.toLowerCase()!=="enmity"&&u[s].forEach(l=>{if(typeof l=="string"){const y={hunter:"Bug Hunter",early:"Early User"};l={name:y[l]?y[l]:l,badge:`${I}badges/${s}/${l.replace(s,"").trim().split(" ")[0]}`}}else typeof l=="object"&&(l.custom=!0);if(!S(E.name,"showCustom",!0)&&l.custom)return;const f=l.name.replace(s,"").trim(),$=S(E.name,"showPrefix",!0)?s:"";l.custom||(l.name=`${$} ${f.charAt(0).toUpperCase()+f.slice(1)}`),p.push(n.createElement(ie,{name:l.name,img:l.badge}))})}),!p.length))return r;r.props.badges?r.props.badges.push(...p):r.props.children.push(...p)})},onStop(){M.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(oe,{settings:e})}};q(re);
