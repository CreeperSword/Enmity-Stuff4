function C(e,o,a){window.enmity.settings.set(e,o,a)}function h(e,o,a){return window.enmity.settings.get(e,o,a)}const{components:t}=window.enmity;t.Alert,t.Button,t.FlatList;const N=t.Image;t.ImageBackground,t.KeyboardAvoidingView,t.Modal,t.Pressable,t.RefreshControl;const V=t.ScrollView;t.SectionList,t.StatusBar,t.StyleSheet,t.Switch;const p=t.Text;t.TextInput,t.TouchableHighlight;const H=t.TouchableOpacity;t.TouchableWithoutFeedback,t.Touchable;const y=t.View;t.VirtualizedList,t.Form,t.FormArrow,t.FormCTA,t.FormCTAButton,t.FormCardSection,t.FormCheckbox,t.FormDivider,t.FormHint,t.FormIcon,t.FormInput,t.FormLabel,t.FormRadio;const c=t.FormRow,x=t.FormSection;t.FormSelect,t.FormSubLabel;const T=t.FormSwitch;t.FormTernaryCheckBox,t.FormText,t.FormTextColors,t.FormTextSizes;function O(e){window.enmity.plugins.registerPlugin(e)}function Y(...e){return window.enmity.modules.getByProps(...e)}function j(...e){return window.enmity.modules.getByName(...e)}window.enmity.modules.common;const g=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const z=window.enmity.modules.common.Toasts,S=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const G=window.enmity.modules.common.Navigation;window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const K=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function W(e){return window.enmity.patcher.create(e)}var r="GlobalBadges",d="1.1.5",X="Adds global badges from other client mods",L=[{name:"HypedDomi",id:"354191516979429376"}],q="#E54B4B",F="https://raw.githubusercontent.com/HypedDomi/Enmity-Stuff/main/dist/GlobalBadges.js",P="https://github.com/HypedDomi/Enmity-Stuff/tree/main/GlobalBadges",E=["Added support for Custom Badges"],l={name:r,version:d,description:X,authors:L,color:q,rawUrl:F,sourceUrl:P,changelog:E};const{native:f}=window.enmity;function J(){f.reload()}f.version,f.build,f.device,f.version;async function $(){let e=(await(await fetch(`${F}?${Math.random()}`)).text()).match(/\d\.\d\.\d+/g);if(!(e!=null&&e.length))return!1;e=e[0].replace('"',""),e=e.split(".").map(a=>parseInt(a));const o=d.split(".").map(a=>parseInt(a));return e[0]>o[0]||e[0]==o[0]&&e[1]>o[1]?!0:e[0]==o[0]&&e[1]==o[1]&&e[2]>o[2]}const Q=e=>{let o=[];fetch(e).then(a=>a.text()).then(a=>o=a.match(/\d\.\d\.\d+/g)),window.enmity.plugins.installPlugin(e,({data:a})=>{a=="installed_plugin"||a=="overridden_plugin"?S.show({title:`Updated ${r}`,body:`Successfully updated to version **${o!=null&&o.length?o[0]:d}**. Would you like to reload Discord now?`,confirmText:"Reload",cancelText:"Later",onConfirm:()=>J()}):console.log(`[${r}] Plugin failed to update to version ${d}`)})};function U(){S.show({title:"Plugin Updater",body:`**${r}** has an update. Do you want to update now?`,confirmText:"Update",cancelText:"No",onConfirm:()=>{C(r,"_didUpdate",!0),Q(`${F}?${Math.random()}`)}})}function A(){!E.length||S.show({title:`${r} - v${d}`,body:`- ${E.join(`
- `)}`,confirmText:"OK",onConfirm:()=>C(r,"_changelog",d)})}const k=Y("transitionToGuild");var Z=({settings:e})=>{const o=K.createThemedStyleSheet({item:{color:g.ThemeColorMap.TEXT_MUTED},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},main_text:{opacity:.975,letterSpacing:.25},header:{color:g.ThemeColorMap.HEADER_PRIMARY,fontFamily:g.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:g.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}}),[a,v]=n.useState(),[u,w]=n.useState();return n.createElement(n.Fragment,null,n.createElement(V,{onTouchStart:m=>{v(m.nativeEvent.pageX),w(m.nativeEvent.pageY)},onTouchEnd:m=>{a-m.nativeEvent.pageX<-100&&u-m.nativeEvent.pageY<40&&u-m.nativeEvent.pageY>-40&&G.pop()}},n.createElement(y,null,n.createElement(y,{style:o.text_container},n.createElement(p,{style:[o.main_text,o.header]},r),n.createElement(y,{style:{flexDirection:"row"}},n.createElement(p,{style:[o.main_text,o.sub_header]},"Author:"),n.createElement(p,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:g.Fonts.DISPLAY_BOLD}]},` ${L.map(m=>m.name).join(", ")}`)),n.createElement(y,{style:{flexDirection:"row"}},n.createElement(p,{style:[o.main_text,o.sub_header]},"Version:"),n.createElement(p,{style:[o.main_text,o.sub_header,{paddingLeft:4,fontFamily:g.Fonts.DISPLAY_BOLD}]},` ${d}`)))),n.createElement(x,{title:"Badges"},n.createElement(c,{label:"Prefix",subLabel:"Shows the Mod as Prefix",trailing:n.createElement(T,{value:e.getBoolean("showPrefix",!0),onValueChange:()=>e.toggle("showPrefix",!0)})}),n.createElement(c,{label:"Custom Badges",subLabel:"Show Custom Badges",trailing:n.createElement(T,{value:e.getBoolean("showCustom",!0),onValueChange:()=>e.toggle("showCustom",!0)})})),n.createElement(x,{title:"Updates"},n.createElement(c,{label:"Check for Updates on startup",subLabel:"Checks automatically for updates when starting the Plugin",trailing:n.createElement(T,{value:e.getBoolean("autoUpdateCheck",!0),onValueChange:()=>e.toggle("autoUpdateCheck",!0)})}),n.createElement(c,{label:"Check for Updates",trailing:c.Arrow,onPress:()=>{$().then(m=>{m?U():S.show({title:"Plugin Updater",body:`**${r}** is already on the latest version (**${d}**)`,confirmText:"OK"})})}}),n.createElement(c,{label:"Show Changelog",subLabel:`Shows the changelog for v${d}`,trailing:c.Arrow,onPress:()=>A(),disabled:!E.length})),n.createElement(x,{title:"Source"},n.createElement(c,{label:"Source",subLabel:`See the Source Code for ${r}`,trailing:c.Arrow,onPress:()=>k==null?void 0:k.openURL(P)}))))};const M="https://clientmodbadges-api.herokuapp.com/",B=new Map,ee=1e3*60*15,te=e=>{const o=B.get(e);if(!B.has(e)||o&&o.expires<Date.now())fetch(`${M}users/${e}`).then(a=>a.json()).then(a=>(B.set(e,{badges:a,expires:Date.now()+ee}),a));else if(o)return o.badges},oe=({name:e,img:o})=>{const a={wrapper:{alignItems:"center",flexDirection:"row",justifyContent:"flex-end"},image:{width:24,height:24,resizeMode:"contain",marginHorizontal:2}};return n.createElement(y,{style:a.wrapper},n.createElement(H,{onPress:()=>z.open({content:e,source:{uri:o}})},n.createElement(N,{style:a.image,source:{uri:o}})))},R=W(l.name),ne={...l,onStart(){h(l.name,"_didUpdate",!1)||(h(l.name,"autoUpdateCheck",!0)&&$().then(o=>{o&&U()}),h(l.name,"_changelog",l.version)!==l.version&&A()),C(l.name,"_didUpdate",!1);const e=j("ProfileBadges",{all:!0,default:!1});for(const o of e)R.after(o,"default",(a,[{user:{id:v}}],u)=>{const[w,m]=n.useState({});if(n.useEffect(()=>{var s;return m((s=te(v))!=null?s:{})},[]),!w)return null;const b=[];if(!w||(Object.keys(w).forEach(s=>{s.toLowerCase()!=="enmity"&&w[s].forEach(i=>{if(typeof i=="string"){const D={hunter:"Bug Hunter",early:"Early User"};D[i]&&(i=D[i]),i={name:i,badge:`${M}badges/${s}/${i.replace(s,"").trim().split(" ")[0]}`}}else typeof i=="object"&&(i.custom=!0);if(!h(l.name,"showCustom",!0)&&i.custom)return;const _=i.name.replace(s,"").trim(),I=h(l.name,"showPrefix",!0)?s:"";i.custom||(i.name=`${I} ${_.charAt(0).toUpperCase()+_.slice(1)}`),b.push(n.createElement(oe,{name:i.name,img:i.badge}))})}),!b.length))return u;u.props.badges?u.props.badges.push(...b):u.props.children.push(...b)})},onStop(){R.unpatchAll()},getSettingsPanel({settings:e}){return n.createElement(Z,{settings:e})}};O(ne);
